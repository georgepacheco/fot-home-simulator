user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    # upstream css {
    #     server localhost:3000;
    # }

    # server {
    #     listen 80;
    #     server_name 10.27.0.62;

    #     # listen 80 default_server;
	#     # listen [::]:80 default_server;
	#     # server_name 10.27.0.62;
	#     # return 301 https://$host$request_uri;

    #     location / {
    #     proxy_pass http://css;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     add_header Access-Control-Allow-Origin "*";
    #     add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE";
    #     add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    #     }
    # }

    server {
         listen 3001;
         listen [::]:3001;
         server_name http://localhost;
         server_tokens off;

         location ^~ /.well-known/acme-challenge/ {
             default_type "text/plain";
             root /var/www/certbot;
         }


        root /usr/share/nginx/html/fot-solid-dash;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        }


         # Configuração opcional para cache de recursos estáticos
         location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
             expires 30d;
             add_header Cache-Control "public";
         }
    }

    server {
         listen 3002;
         listen [::]:3002;
         server_name http://localhost;
         server_tokens off;

         location ^~ /.well-known/acme-challenge/ {
             default_type "text/plain";
             root /var/www/certbot;
         }


        root /usr/share/nginx/html/health-application;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        }


         # Configuração opcional para cache de recursos estáticos
         location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
             expires 30d;
             add_header Cache-Control "public";
         }
    }
}
