user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    
    keepalive_timeout  65;
    
    include /etc/nginx/conf.d/*.conf;
    
   server {
        listen 80;
        server_name 192.168.0.111;

        # Redireciona todo o tráfego HTTP para HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name 192.168.0.111;

        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        
	# ssl_trusted_certificate /etc/nginx/ssl/myCA.pem;

        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
            # O proxy_pass usa HTTP para comunicação com o Solid Server
            proxy_pass https://192.168.0.111:3000;
            
            # Configura o Host que será enviado ao Solid Server
            proxy_set_header Host 192.168.0.111:3000;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto HTTP;
            proxy_set_header X-Forwarded-Proto $scheme;
           
            # Opcional: Corrigir qualquer potencial redirecionamento para HTTPS
            # proxy_redirect https://192.168.0.111:3000/ http://192.168.0.111:3000/;

             # Pass these headers from the Solid server back to the client
    
            # proxy_pass_header Server;
            # proxy_pass_header Set-Cookie;

            # # Enable Websocket support
            # proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";
        }
    }


    server {
        listen 3001 ssl;
        server_name _;
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        
        root /usr/share/nginx/html/fot-solid-dash;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        }

        location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
            expires 30d;
            add_header Cache-Control "public";
        }
    }

    server {
        listen 3002 ssl;
        server_name _;
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        
        root /usr/share/nginx/html/health-application;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        }

        location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
            expires 30d;
            add_header Cache-Control "public";
        }
    }

    server {
        listen 3030 ssl;
        server_name _;
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        
        root /usr/share/nginx/html/fot-solid-dash;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        }

        location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
            expires 30d;
            add_header Cache-Control "public";
        }
    }
}
