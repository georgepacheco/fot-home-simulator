user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
    
    # upstream community-solid-server {
    #     server localhost:3000;
    # }

    server {
        listen 80;        
        server_name 192.168.0.111;

        # listen 80 default_server;
	    # listen [::]:80 default_server;
	    # server_name 192.168.0.111;
	    # return 301 https://$host$request_uri;

        location / {
            # proxy_pass http://localhost:3000$request_uri;
            proxy_pass http://192.168.0.111:3000;
            # proxy_pass http://localhost:3000;
            
            # proxy_set_header Host $host;
            proxy_set_header Host 192.168.0.111:3000;
            # proxy_set_header Host localhost:3000;
            
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Host 192.168.0.111:3000;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configurações CORS
            add_header 'Access-Control-Allow-Origin' '*' always;
            # add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # Pass these headers from the Solid server back to the client
            proxy_pass_header Server;
            proxy_pass_header Set-Cookie;

            # Enable Websocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Trata requisições OPTIONS
            if ($request_method = OPTIONS) {
                add_header 'Access-Control-Allow-Origin' '*' always;
                # add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                return 204;
            }
           
        }
    }

    server {
         listen 3001;
         listen [::]:3001;
         server_name _;
         server_tokens off;

         location ^~ /.well-known/acme-challenge/ {
             default_type "text/plain";
             root /var/www/certbot;
         }


        root /usr/share/nginx/html/fot-solid-dash;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        }


         # Configuração opcional para cache de recursos estáticos
         location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
             expires 30d;
             add_header Cache-Control "public";
         }
    }

    server {
         listen 3002;
         listen [::]:3002;
         server_name _;
         server_tokens off;

         location ^~ /.well-known/acme-challenge/ {
             default_type "text/plain";
             root /var/www/certbot;
         }


        root /usr/share/nginx/html/health-application;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        }


         # Configuração opcional para cache de recursos estáticos
         location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
             expires 30d;
             add_header Cache-Control "public";
         }
    }
}
